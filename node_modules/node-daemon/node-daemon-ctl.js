#!/usr/bin/env node
// Generated by LiveScript 1.2.0
var optionator, util, net, cmd, version, opts, clOptions, command, exec;
optionator = require('optionator');
util = require('util');
net = require('net');
cmd = "node-daemon-ctl";
version = "0.0.1";
opts = optionator({
  prepend: "Usage: " + cmd + " [options] {status|fullstatus|start|stop|restart|reload}",
  append: "Version " + version,
  options: [
    {
      option: 'socket',
      alias: 's',
      type: 'String',
      description: "Path to controlling socket",
      'default': "./node-daemon.socket"
    }, {
      option: 'help',
      alias: 'h',
      type: 'Boolean'
    }
  ]
});
clOptions = opts.parse(process.argv);
command = clOptions._.join(" ");
if (clOptions.help != null || /^$/.test(command)) {
  console.log(opts.generateHelp());
  process.exit(0);
}
exec = function(cmd){
  var socket;
  return socket = (new net.Socket).on('error', function(err){
    var message;
    message = (function(){
      switch (err.code) {
      case 'ENOENT':
        return "No such file. Wrong file name or daemon not runing.";
      case 'ECONNREFUSED':
        return "Connection refused. The daemon must have died.";
      default:
        return err;
      }
    }());
    console.log(message);
    return process.exit(1);
  }).on('data', function(data){
    return process.stdout.write(data.toString());
  }).on('end', function(){
    return process.exit(0);
  }).connect(clOptions.socket).write(cmd);
};
switch (command) {
case 'start':
case 'restart':
  console.log("Command `" + command + "` not implemented yet");
  break;
case 'fullstatus':
  exec('fullstatus');
  break;
case 'status':
  exec('status');
  break;
case 'stop':
  exec('exit');
  break;
case 'reload':
  exec('reload');
  break;
case 'gc':
  exec('gc');
  break;
default:
  console.log("Unknown command `" + command + "`");
}